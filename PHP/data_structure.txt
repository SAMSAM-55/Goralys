-- GORALYS DATABASE SCHEMA
-- version 1.3 – with temporary user verification system and student subjects

-- Makes sure all previous tables are deleted
DROP TABLE IF EXISTS users, users_temp, student_topics, topics;

-- -----------------------------------------------------
-- USERS TABLE (main active accounts)
-- -----------------------------------------------------

CREATE TABLE users (
                       id INT AUTO_INCREMENT PRIMARY KEY,
                       user_id VARCHAR(32) NOT NULL UNIQUE,         -- e.g. "j.dupont3"
                       full_name VARCHAR(100) NOT NULL,
                       email VARCHAR(100),
                       password_hash VARCHAR(255),
                       role ENUM('teacher', 'student', 'admin') NOT NULL,
                       created_at DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- USERS_TEMP TABLE (pending email verification)
-- -----------------------------------------------------
CREATE TABLE users_temp (
                            id INT AUTO_INCREMENT PRIMARY KEY,
                            user_id VARCHAR(32) NOT NULL UNIQUE,         -- same pattern e.g. "j.dupont3"
                            full_name VARCHAR(100) NOT NULL,
                            email VARCHAR(100) NOT NULL,
                            password_hash VARCHAR(255) NOT NULL,
                            role ENUM('teacher', 'student') NOT NULL,    -- admins are created manually
                            verification_token VARCHAR(255) NOT NULL,     -- Base64 (64 chars + padding)
                            created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                            INDEX (verification_token)
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- TOPICS TABLE
-- -----------------------------------------------------
CREATE TABLE topics (
                        id INT AUTO_INCREMENT PRIMARY KEY,
                        topic_code VARCHAR(32) NOT NULL,      -- e.g. "maths_2025_jd"
                        name VARCHAR(100) NOT NULL,
                        teacher_id VARCHAR(32) NOT NULL,
                        created_at DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

-- -----------------------------------------------------
-- STUDENT_TOPICS TABLE (Many-to-Many)
-- -----------------------------------------------------
CREATE TABLE student_topics (
                                student_id VARCHAR(32) NOT NULL,
                                topic_id INT NOT NULL,                       -- FK → topics.id
                                subject varchar(255),
                                last_rejected varchar(255),
                                subject_status TINYINT(1) DEFAULT 0, -- 0=not submitted, 1=submitted, 2=rejected, 3=approved
                                added_at DATETIME DEFAULT CURRENT_TIMESTAMP,
                                PRIMARY KEY (student_id, topic_id),
                                FOREIGN KEY (topic_id) REFERENCES topics(id)
                                    ON DELETE CASCADE
                                    ON UPDATE CASCADE
) ENGINE=InnoDB;
